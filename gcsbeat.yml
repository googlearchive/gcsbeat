################### Gcpstoragebeat Configuration Example #########################

############################# Gcpstoragebeat ######################################

gcsbeat:
  # The number of seconds between looking for new files in your bucket.
  interval: 60s

  # The bucket containing your log files. If the `bucket_id` begins with file:// then the directory
  # pointed to will be used instead. This can be useful for testing your glob logic before
  # going live.
  bucket_id: my_log_bucket

  # The path to the key to authenticate your user to the bucket.
  # this service user _should_ have the `storage.objects.update`
  # permission so it can create metadata on the object preventing
  # it from being scanned multiple times.
  json_key_file: /path/to/key.json

  # Should the log file be deleted after its contents have been updated?
  delete: false

  # A glob pattern to filter files. Only files with names matching this will be considered.
  file_matches: "*.log"

  # Any files matching this glob are excluded from processing.
  file_exclude: "bak_*"

  # This key will be set on the objects after they've been processed by the beat. That way you can
  # stop the beat and not upload files again or prevent them from being uploaded by setting the
  # field manually.
  #
  # NOTE the key is a flag, if a file was partially processed some events will be resent.
  metadata_key: x-goog-meta-gcsbeat

  # Codec describes how the values in the matched files will be parsed.
  #
  # Possible values
  #
  # * `text` A newline delimited file. Sends one event per line including the file name and line
  #   number.
  # * `json-array` A JSON array containing maps e.g. "[{...}, ...]" Sends one event per map.
  #   Parsed values are added to the log event.
  # * `json-stream` A file of concatenated JSON maps e.g. "{...}{...}..." Sends one event per map.
  #   Parsed values are added to the log event.
  # * `clob` The full contents of a UTF-8 text file. Sends one event per file.
  # * `blob` The full contents of a file encoded in Base64.
  codec: "text"

  # If set to true, files ending in .gz are decompressed before they're parsed by the codec.
  # The file will be skipped if it has the suffix, but can't be opened as a gzip
  # for example, if it has a bad magic number.
  unpack_gzip: false

  # If set, the beat WILL NOT modify attributes on the files in the bucket. Instead it will store
  # the list of processed files locally in this Bolt database.
  # The database does take the metadata_key into account, changing the key will mean all the files
  # will be re-processed.
  #
  # Caveat, the database works by storing filename/metadata_key pairs. If files are modified
  # remotely (deleted and re-written) the changes will not be picked up.
  processed_db_path: "processed_file_list.db"

#================================ General =====================================

# The name of the shipper that publishes the network data. It can be used to group
# all the transactions sent by a single shipper in the web interface.
#name:

# The tags of the shipper are included in their own field with each
# transaction published.
#tags: ["service-X", "web-tier"]

# Optional fields that you can specify to add additional information to the
# output.
#fields:
#  env: staging


#============================== Dashboards =====================================
# These settings control loading the sample dashboards to the Kibana index. Loading
# the dashboards is disabled by default and can be enabled either by setting the
# options here, or by using the `-setup` CLI flag or the `setup` command.
#setup.dashboards.enabled: false

# The URL from where to download the dashboards archive. By default this URL
# has a value which is computed based on the Beat name and version. For released
# versions, this URL points to the dashboard archive on the artifacts.elastic.co
# website.
#setup.dashboards.url:

#============================== Kibana =====================================

# Starting with Beats version 6.0.0, the dashboards are loaded via the Kibana API.
# This requires a Kibana endpoint configuration.
setup.kibana:

  # Kibana Host
  # Scheme and port can be left out and will be set to the default (http and 5601)
  # In case you specify and additional path, the scheme is required: http://localhost:5601/path
  # IPv6 addresses should always be defined as: https://[2001:db8::1]:5601
  #host: "localhost:5601"

#============================= Elastic Cloud ==================================

# These settings simplify using gcsbeat with the Elastic Cloud (https://cloud.elastic.co/).

# The cloud.id setting overwrites the `output.elasticsearch.hosts` and
# `setup.kibana.host` options.
# You can find the `cloud.id` in the Elastic Cloud web UI.
#cloud.id:

# The cloud.auth setting overwrites the `output.elasticsearch.username` and
# `output.elasticsearch.password` settings. The format is `<user>:<pass>`.
#cloud.auth:

#================================ Outputs =====================================

# Configure what output to use when sending the data collected by the beat.

#-------------------------- Elasticsearch output ------------------------------
output.elasticsearch:
  # Array of hosts to connect to.
  hosts: ["localhost:9200"]

  # Optional protocol and basic auth credentials.
  #protocol: "https"
  #username: "elastic"
  #password: "changeme"

#----------------------------- Logstash output --------------------------------
#output.logstash:
  # The Logstash hosts
  #hosts: ["localhost:5044"]

  # Optional SSL. By default is off.
  # List of root certificates for HTTPS server verifications
  #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]

  # Certificate for SSL client authentication
  #ssl.certificate: "/etc/pki/client/cert.pem"

  # Client Certificate Key
  #ssl.key: "/etc/pki/client/cert.key"

#================================ Logging =====================================

# Sets log level. The default log level is info.
# Available log levels are: error, warning, info, debug
#logging.level: debug

# At debug level, you can selectively enable logging only for some components.
# To enable all selectors use ["*"]. Examples of other selectors are "beat",
# "publish", "service".
#logging.selectors: ["*"]

#============================== Xpack Monitoring ===============================
# gcsbeat can export internal metrics to a central Elasticsearch monitoring
# cluster.  This requires xpack monitoring to be enabled in Elasticsearch.  The
# reporting is disabled by default.

# Set to true to enable the monitoring reporter.
#xpack.monitoring.enabled: false

# Uncomment to send the metrics to Elasticsearch. Most settings from the
# Elasticsearch output are accepted here as well. Any setting that is not set is
# automatically inherited from the Elasticsearch output configuration, so if you
# have the Elasticsearch output configured, you can simply uncomment the
# following line.
#xpack.monitoring.elasticsearch:
